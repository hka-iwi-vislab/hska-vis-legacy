apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  webshop-db-user: webshopuser
  webshop-database: webshop
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
data:
  db-password: MjQwYjJjNmQ1OGZmMmNlMmY1MDhiNDlm
  db-root-password: YzhkZTExMGYzNzMwMGE1M2E5NzE3NDk=
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Programme (nicht installiert)\Kompose\kompose.exe convert -f docker-compose-leodocking.yml -o microleo.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    app: categories
  name: categories
spec:
  ports:
    - name: "8082"
      protocol: TCP
      port: 8082
      targetPort: 8082
  selector:
    app: categories
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Programme (nicht installiert)\Kompose\kompose.exe convert -f docker-compose-leodocking.yml -o microleo.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    app: legacywebshop
  name: legacywebshop
spec:
  ports:
    - name: "8888"
      protocol: TCP
      port: 8888
      targetPort: 8080
  selector:
    app: legacywebshop
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Programme (nicht installiert)\Kompose\kompose.exe convert -f docker-compose-leodocking.yml -o microleo.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    app: products
  name: products
spec:
  ports:
    - name: "8081"
      protocol: TCP
      port: 8081
      targetPort: 8081
  selector:
    app: products
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Programme (nicht installiert)\Kompose\kompose.exe convert -f docker-compose-leodocking.yml -o microleo.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    app: web-shop-db-image
  name: web-shop-db-image
spec:
  ports:
    - name: "3306"
      protocol: TCP
      port: 3306
      targetPort: 3306
  selector:
    app: web-shop-db-image
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Programme (nicht installiert)\Kompose\kompose.exe convert -f docker-compose-leodocking.yml -o microleo.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    app: categories
  name: categories
spec:
  replicas: 1
  selector:
    matchLabels:
      app: categories
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Programme (nicht installiert)\Kompose\kompose.exe convert -f docker-compose-leodocking.yml -o microleo.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        app: categories
    spec:
      containers:
        - image: leodocking/categories
          name: categories
          ports:
            - containerPort: 8082
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Programme (nicht installiert)\Kompose\kompose.exe convert -f docker-compose-leodocking.yml -o microleo.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    app: legacywebshop
  name: legacywebshop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: legacywebshop
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Programme (nicht installiert)\Kompose\kompose.exe convert -f docker-compose-leodocking.yml -o microleo.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        app: legacywebshop
    spec:
      containers:
        - image: leodocking/webshop
          name: legacywebshop
          ports:
            - containerPort: 8080
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Programme (nicht installiert)\Kompose\kompose.exe convert -f docker-compose-leodocking.yml -o microleo.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    app: products
  name: products
spec:
  replicas: 1
  selector:
    matchLabels:
      app: products
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Programme (nicht installiert)\Kompose\kompose.exe convert -f docker-compose-leodocking.yml -o microleo.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        app: products
    spec:
      containers:
        - image: leodocking/products
          name: products
          ports:
            - containerPort: 8081
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Programme (nicht installiert)\Kompose\kompose.exe convert -f docker-compose-leodocking.yml -o microleo.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    app: web-shop-db-image
  name: web-shop-db-image
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-shop-db-image
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Programme (nicht installiert)\Kompose\kompose.exe convert -f docker-compose-leodocking.yml -o microleo.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        app: web-shop-db-image
    spec:
      containers:
        - env:
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: db-password
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: db-root-password
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: webshop-db-user
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: webshop-database
          image: leodocking/webshop-database
          imagePullPolicy: IfNotPresent
          name: web-shop-db-image
          ports:
            - containerPort: 3306
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: web-shop-db-image-claim0
            #- mountPath: /docker-entrypoint-initdb.d
              #name: web-shop-db-image-claim1
      restartPolicy: Always
      volumes:
        - name: web-shop-db-image-claim0
          persistentVolumeClaim:
            claimName: web-shop-db-image-claim0
        #- name: web-shop-db-image-claim1
        #  persistentVolumeClaim:
        #    claimName: web-shop-db-image-claim1
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: web-shop-db-image-claim0
  name: web-shop-db-image-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: apache
  name: apache
spec:
  replicas: 1
  selector:
    matchLabels:
      run: apache
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: apache
    spec:
      containers:
      - image: leodocking/revproxy
        name: apache
        ports:
        - containerPort: 80
        resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: apache
  name: apache
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: apache
  type: LoadBalancer
status:
  loadBalancer: {}
